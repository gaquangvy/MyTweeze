package pages;

import tweeze.modules.User;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

import static java.awt.Font.BOLD;

public class UserView extends JPanel {
    //outputs
    private User user;

    public String getName() {
        return "MyTweeze@" + user.getId();
    }

    private JPanel userView;
    private JButton followButton;
    private JButton tweezeButton;
    private JTextArea tweezeContent;
    private JList followingList;
    private JList newfeedList;
    private JLabel username;

    UserView(User user) {
        this.user = user;
        add(userView);

        username.setText(user.getName());
        followingList.setModel(generateFollowings());
        newfeedList.setModel(generateNewsfeed());
        tweezeButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                user.post(tweezeContent.getText());
            }
        });
        tweezeButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                String content = tweezeContent.getText();
                if (!content.isEmpty() && content.length() > 2)
                    user.post(content);
            }
        });
        tweezeContent.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                super.keyTyped(e);
                tweezeButton.setEnabled(!tweezeContent.getText().isEmpty() && tweezeContent.getText().length() > 2);
            }
        });
    }

    private DefaultListModel generateFollowings() {
        DefaultListModel followingsList = new DefaultListModel();
        List<User> followings = user.getFollowings();
        if (followings.isEmpty()) followingsList.addElement("No Following");
        for (User user : followings)
            followingsList.addElement("- " + user.getName() + " @ " + user.getId());
        return followingsList;
    }

    private DefaultListModel generateNewsfeed() {
        DefaultListModel newsfeed = new DefaultListModel();
        List<String[]> news = user.getNewsfeed();
        if (news.isEmpty()) newsfeed.addElement("Newsfeed is Empty");
        else for (String[] post : news) {
            JPanel pane = new JPanel();
            JLabel user = new JLabel(post[0] + ": ");
            user.setFont(new Font("Verdana", BOLD, 12));
            pane.add(user);
            pane.add(new JLabel(post[1]));
            newsfeed.addElement(pane);
        }
        return newsfeed;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        userView = new JPanel();
        userView.setLayout(new GridBagLayout());
        userView.setBackground(new Color(-1126417));
        userView.setForeground(new Color(-16777216));
        userView.setMaximumSize(new Dimension(600, 600));
        userView.setMinimumSize(new Dimension(600, 600));
        userView.setPreferredSize(new Dimension(600, 600));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setBackground(new Color(-1126417));
        panel1.setMaximumSize(new Dimension(600, 200));
        panel1.setMinimumSize(new Dimension(600, 200));
        panel1.setPreferredSize(new Dimension(600, 200));
        panel1.setRequestFocusEnabled(false);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        userView.add(panel1, gbc);
        followButton = new JButton();
        followButton.setMaximumSize(new Dimension(100, 30));
        followButton.setMinimumSize(new Dimension(100, 30));
        followButton.setPreferredSize(new Dimension(100, 30));
        followButton.setText("Follow");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(followButton, gbc);
        tweezeButton = new JButton();
        tweezeButton.setMaximumSize(new Dimension(100, 50));
        tweezeButton.setMinimumSize(new Dimension(100, 50));
        tweezeButton.setPreferredSize(new Dimension(100, 50));
        tweezeButton.setText("Tweeze");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(tweezeButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setMaximumSize(new Dimension(340, 150));
        scrollPane1.setMinimumSize(new Dimension(340, 150));
        scrollPane1.setPreferredSize(new Dimension(340, 150));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(scrollPane1, gbc);
        tweezeContent = new JTextArea();
        tweezeContent.setMaximumSize(new Dimension(340, 150));
        tweezeContent.setMinimumSize(new Dimension(340, 150));
        tweezeContent.setOpaque(true);
        tweezeContent.setPreferredSize(new Dimension(340, 150));
        scrollPane1.setViewportView(tweezeContent);
        username = new JLabel();
        Font usernameFont = this.$$$getFont$$$("Goudy Stout", -1, 22, username.getFont());
        if (usernameFont != null) username.setFont(usernameFont);
        username.setHorizontalAlignment(0);
        username.setHorizontalTextPosition(0);
        username.setMaximumSize(new Dimension(550, 50));
        username.setMinimumSize(new Dimension(550, 50));
        username.setPreferredSize(new Dimension(550, 50));
        username.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(username, gbc);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Comic Sans MS", Font.BOLD, 26, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16777216));
        label1.setHorizontalAlignment(0);
        label1.setMaximumSize(new Dimension(200, 50));
        label1.setMinimumSize(new Dimension(200, 50));
        label1.setPreferredSize(new Dimension(200, 50));
        label1.setText("Followings");
        label1.setVerticalAlignment(3);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        userView.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        userView.add(spacer1, gbc);
        final JLabel label2 = new JLabel();
        label2.setFocusable(true);
        Font label2Font = this.$$$getFont$$$("Comic Sans MS", Font.BOLD, 26, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-16777216));
        label2.setHorizontalAlignment(0);
        label2.setMaximumSize(new Dimension(400, 50));
        label2.setMinimumSize(new Dimension(400, 50));
        label2.setPreferredSize(new Dimension(400, 50));
        label2.setText("Newfeeds");
        label2.setVerticalAlignment(3);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        userView.add(label2, gbc);
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane2.setMaximumSize(new Dimension(200, 350));
        scrollPane2.setMinimumSize(new Dimension(200, 350));
        scrollPane2.setPreferredSize(new Dimension(200, 350));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        userView.add(scrollPane2, gbc);
        followingList = new JList();
        followingList.setMaximumSize(new Dimension(200, 350));
        followingList.setMinimumSize(new Dimension(200, 350));
        followingList.setPreferredSize(new Dimension(200, 350));
        scrollPane2.setViewportView(followingList);
        final JScrollPane scrollPane3 = new JScrollPane();
        scrollPane3.setMaximumSize(new Dimension(400, 350));
        scrollPane3.setMinimumSize(new Dimension(400, 350));
        scrollPane3.setPreferredSize(new Dimension(400, 350));
        scrollPane3.setVerifyInputWhenFocusTarget(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        userView.add(scrollPane3, gbc);
        newfeedList = new JList();
        newfeedList.setMaximumSize(new Dimension(400, 350));
        newfeedList.setMinimumSize(new Dimension(400, 350));
        newfeedList.setPreferredSize(new Dimension(400, 350));
        scrollPane3.setViewportView(newfeedList);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return userView;
    }

}
